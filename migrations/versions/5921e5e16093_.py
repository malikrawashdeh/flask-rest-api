"""empty message

Revision ID: 5921e5e16093
Revises: 5d7e80cb6c69
Create Date: 2023-05-28 09:45:21.342667

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import engine_from_config
from sqlalchemy.engine import reflection

config = op.get_context().config
engine = engine_from_config(
    config.get_section(config.config_ini_section), prefix="sqlalchemy."
)
inspector = reflection.Inspector.from_engine(engine)
itemcolumns = inspector.get_columns("items")
usercolumns = inspector.get_columns("users")

# revision identifiers, used by Alembic.
revision = '5921e5e16093'
down_revision = '5d7e80cb6c69'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=2),
               existing_nullable=False)

    if not any([c['name'] == 'email' for c in usercolumns]):
        with op.batch_alter_table('users', schema=None) as batch_op:
            batch_op.add_column(sa.Column('email', sa.String(), nullable=False))
            batch_op.create_unique_constraint(None, ['email'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('email')

    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.Float(precision=2),
               type_=sa.REAL(),
               existing_nullable=False)

    # ### end Alembic commands ###
